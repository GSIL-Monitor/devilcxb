# -*- coding: utf-8 -*-

def insert_sort(lists):
    """
    插入排序的主要思想是每次取一个列表元素与列表中已经排序好的列表段进行比较，然后插入从而得到新的排序好的列表段，最终获得排序好的列表。

    比如，待排序列表为[49,38,65,97,76,13,27,49]，则比较的步骤和得到的新列表如下：

    (带有背景颜色的列表段是已经排序好的，红色背景标记的是执行插入并且进行过交换的元素）
    时间复杂度：O(n^2)

    待排序： 　　　　[49,38,65,97,76,13,27,49]

    第一次比较后：　 [38,49,65,97,76,13,27,49]     第二个元素（38）与之前的元素进行比较，发现38较小，进行交换

    第二次比较后：　 [38,49,65,97,76,13,27,49]　  第三个元素（65）大于前一个元素（49），所以不进行交换操作，直接到下一个元素比较

    第三次比较后： 　[38,49,65,97,76,13,27,49]　  和第二次比较类似

    第四次比较后：　 [38,49,65,76,97,13,27,49]　  当前元素（76）比前一元素（97）小，（97）后移，（76）继续与（65）比较，发现当前元素比较大，执行插入

    第五次比较后：　 [13,38,49,65,76,97,27,49]　　

    第六次比较后：　 [13,27,38,49,65,76,97,49]

    第七次比较后：　 [13,27,38,49,49,65,76,97] 
    """
    # print lists
    for i in range(1, len(lists)):
        for j in range(i):
            if lists[i] < lists[j]:
                temp_value = lists[i]
                del lists[i]
                lists.insert(j, temp_value)
                print lists
                break
    return lists


if __name__ == '__main__':
    print insert_sort([7, 3, 1, 2, 4, 6, 5])
